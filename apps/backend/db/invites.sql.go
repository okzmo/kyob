// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: invites.sql

package db

import (
	"context"
	"time"

	"github.com/jackc/pgx/v5/pgconn"
)

const checkInvite = `-- name: CheckInvite :execresult
SELECT id FROM invites WHERE invite_id = $1
`

func (q *Queries) CheckInvite(ctx context.Context, inviteID string) (pgconn.CommandTag, error) {
	return q.db.Exec(ctx, checkInvite, inviteID)
}

const createInvite = `-- name: CreateInvite :one
INSERT INTO invites (
  server_id, invite_id, expire_at
) VALUES (
  $1, $2, $3
)
RETURNING invite_id
`

type CreateInviteParams struct {
	ServerID int64     `json:"server_id"`
	InviteID string    `json:"invite_id"`
	ExpireAt time.Time `json:"expire_at"`
}

func (q *Queries) CreateInvite(ctx context.Context, arg CreateInviteParams) (string, error) {
	row := q.db.QueryRow(ctx, createInvite, arg.ServerID, arg.InviteID, arg.ExpireAt)
	var invite_id string
	err := row.Scan(&invite_id)
	return invite_id, err
}
