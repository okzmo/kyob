// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: friends.sql

package db

import (
	"context"
)

const acceptFriend = `-- name: AcceptFriend :exec
UPDATE friends SET accepted=true WHERE id=$1
`

func (q *Queries) AcceptFriend(ctx context.Context, id string) error {
	_, err := q.db.Exec(ctx, acceptFriend, id)
	return err
}

const addFriend = `-- name: AddFriend :one
INSERT INTO friends (
  id, user_id, friend_id
) VALUES (
  $1, $2, $3
)
RETURNING id, user_id, friend_id, accepted, created_at, updated_at
`

type AddFriendParams struct {
	ID       string `json:"id"`
	UserID   string `json:"user_id"`
	FriendID string `json:"friend_id"`
}

func (q *Queries) AddFriend(ctx context.Context, arg AddFriendParams) (Friend, error) {
	row := q.db.QueryRow(ctx, addFriend, arg.ID, arg.UserID, arg.FriendID)
	var i Friend
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.FriendID,
		&i.Accepted,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteFriend = `-- name: DeleteFriend :exec
DELETE FROM friends WHERE id=$1
`

func (q *Queries) DeleteFriend(ctx context.Context, id string) error {
	_, err := q.db.Exec(ctx, deleteFriend, id)
	return err
}
