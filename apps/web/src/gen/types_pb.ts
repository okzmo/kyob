// @generated by protoc-gen-es v2.3.0 with parameter "target=ts"
// @generated from file types.proto (package types, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file types.proto.
 */
export const file_types: GenFile = /*@__PURE__*/
  fileDesc("Cgt0eXBlcy5wcm90bxIFdHlwZXMi0gMKCVdTTWVzc2FnZRIzCgxjaGF0X21lc3NhZ2UYASABKAsyGy50eXBlcy5Ccm9hZGNhc3RDaGF0TWVzc2FnZUgAEjsKEGNoYW5uZWxfY3JlYXRpb24YAiABKAsyHy50eXBlcy5Ccm9hZGNhc3RDaGFubmVsQ3JlYXRpb25IABI5Cg9jaGFubmVsX3JlbW92ZWQYAyABKAsyHi50eXBlcy5Ccm9hZGNhc3RDaGFubmVsUmVtb3ZlZEgAEjMKCG5ld191c2VyGAQgASgLMh8udHlwZXMuQnJvYWRjYXN0TmV3VXNlckluU2VydmVySAASLwoMdXNlcl9jb25uZWN0GAUgASgLMhcudHlwZXMuQnJvYWRjYXN0Q29ubmVjdEgAEjUKD3VzZXJfZGlzY29ubmVjdBgGIAEoCzIaLnR5cGVzLkJyb2FkY2FzdERpc2Nvbm5lY3RIABI7Cg5kZWxldGVfbWVzc2FnZRgHIAEoCzIhLnR5cGVzLkJyb2FkY2FzdERlbGV0ZUNoYXRNZXNzYWdlSAASMwoMZWRpdF9tZXNzYWdlGAggASgLMhsudHlwZXMuQnJvYWRjYXN0RWRpdE1lc3NhZ2VIAEIJCgdjb250ZW50IjYKDFVzZXJMaW5rc1JvdxIKCgJpZBgBIAEoBRINCgVsYWJlbBgCIAEoCRILCgN1cmwYAyABKAkiOAoMVXNlckZhY3RzUm93EgoKAmlkGAEgASgFEg0KBWxhYmVsGAIgASgJEg0KBXZhbHVlGAMgASgJIv0CCgRVc2VyEgoKAmlkGAEgASgFEg0KBWVtYWlsGAIgASgJEhAKCHVzZXJuYW1lGAMgASgJEhQKDGRpc3BsYXlfbmFtZRgEIAEoCRITCgZhdmF0YXIYBSABKAlIAIgBARITCgZiYW5uZXIYBiABKAlIAYgBARIZCgxncmFkaWVudF90b3AYByABKAlIAogBARIcCg9ncmFkaWVudF9ib3R0b20YCCABKAlIA4gBARISCgVhYm91dBgJIAEoCUgEiAEBEi4KCmNyZWF0ZWRfYXQYCiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiIKBWxpbmtzGAsgAygLMhMudHlwZXMuVXNlckxpbmtzUm93EiIKBWZhY3RzGAwgAygLMhMudHlwZXMuVXNlckZhY3RzUm93QgkKB19hdmF0YXJCCQoHX2Jhbm5lckIPCg1fZ3JhZGllbnRfdG9wQhIKEF9ncmFkaWVudF9ib3R0b21CCAoGX2Fib3V0Ip0BChNJbmNvbWluZ0NoYXRNZXNzYWdlEhsKBmF1dGhvchgBIAEoCzILLnR5cGVzLlVzZXISEQoJc2VydmVyX2lkGAIgASgFEhIKCmNoYW5uZWxfaWQYAyABKAUSDwoHY29udGVudBgEIAEoDBIWCg5tZW50aW9uc191c2VycxgFIAMoBRIZChFtZW50aW9uc19jaGFubmVscxgGIAMoBSKhAQoPRWRpdENoYXRNZXNzYWdlEg8KB3VzZXJfaWQYASABKAMSEQoJc2VydmVyX2lkGAIgASgFEhIKCmNoYW5uZWxfaWQYAyABKAUSEgoKbWVzc2FnZV9pZBgEIAEoBRIPCgdjb250ZW50GAUgASgMEhYKDm1lbnRpb25zX3VzZXJzGAYgAygFEhkKEW1lbnRpb25zX2NoYW5uZWxzGAcgAygFIl8KEURlbGV0ZUNoYXRNZXNzYWdlEg8KB3VzZXJfaWQYASABKAMSEQoJc2VydmVyX2lkGAIgASgFEhIKCmNoYW5uZWxfaWQYAyABKAUSEgoKbWVzc2FnZV9pZBgEIAEoBSLaAQoUQnJvYWRjYXN0Q2hhdE1lc3NhZ2USCgoCaWQYASABKAUSGwoGYXV0aG9yGAIgASgLMgsudHlwZXMuVXNlchIRCglzZXJ2ZXJfaWQYAyABKAUSEgoKY2hhbm5lbF9pZBgEIAEoBRIPCgdjb250ZW50GAUgASgMEhYKDm1lbnRpb25zX3VzZXJzGAYgAygFEhkKEW1lbnRpb25zX2NoYW5uZWxzGAcgAygFEi4KCmNyZWF0ZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIsUBChRCcm9hZGNhc3RFZGl0TWVzc2FnZRISCgptZXNzYWdlX2lkGAEgASgFEhEKCXNlcnZlcl9pZBgCIAEoBRISCgpjaGFubmVsX2lkGAMgASgFEg8KB2NvbnRlbnQYBCABKAwSFgoObWVudGlvbnNfdXNlcnMYBSADKAUSGQoRbWVudGlvbnNfY2hhbm5lbHMYBiADKAUSLgoKdXBkYXRlZF9hdBgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiVwoaQnJvYWRjYXN0RGVsZXRlQ2hhdE1lc3NhZ2USEgoKbWVzc2FnZV9pZBgBIAEoBRIRCglzZXJ2ZXJfaWQYAiABKAUSEgoKY2hhbm5lbF9pZBgDIAEoBSJpChdCcm9hZGNhc3RDaGFubmVsUmVtb3ZlZBIRCglzZXJ2ZXJfaWQYASABKAUSEgoKY2hhbm5lbF9pZBgCIAEoBRIQCghhY3Rvcl9pZBgDIAEoCRIVCg1hY3Rvcl9hZGRyZXNzGAQgASgJIkgKGEJyb2FkY2FzdE5ld1VzZXJJblNlcnZlchIRCglzZXJ2ZXJfaWQYASABKAUSGQoEdXNlchgCIAEoCzILLnR5cGVzLlVzZXIiVAoWQnJvYWRjYXN0U2VydmVyUmVtb3ZlZBIRCglzZXJ2ZXJfaWQYASABKAUSEAoIYWN0b3JfaWQYAiABKAkSFQoNYWN0b3JfYWRkcmVzcxgDIAEoCSK8AgoYQnJvYWRjYXN0Q2hhbm5lbENyZWF0aW9uEgoKAmlkGAEgASgFEhEKCXNlcnZlcl9pZBgCIAEoBRIMCgRuYW1lGAMgASgJEgwKBHR5cGUYBCABKAkSGAoLZGVzY3JpcHRpb24YBSABKAlIAIgBARINCgV1c2VycxgGIAMoBRINCgVyb2xlcxgHIAMoBRIJCgF4GAggASgFEgkKAXkYCSABKAUSLgoKY3JlYXRlZF9hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoIYWN0b3JfaWQYDCABKAkSFQoNYWN0b3JfYWRkcmVzcxgNIAEoCUIOCgxfZGVzY3JpcHRpb24iUwoQQnJvYWRjYXN0Q29ubmVjdBIRCglzZXJ2ZXJfaWQYASABKAUSDwoHdXNlcl9pZBgCIAEoBRINCgV1c2VycxgDIAMoBRIMCgR0eXBlGAQgASgJIkcKE0Jyb2FkY2FzdERpc2Nvbm5lY3QSEQoJc2VydmVyX2lkGAEgASgFEg8KB3VzZXJfaWQYAiABKAUSDAoEdHlwZRgDIAEoCSKhAQoTQm9keUNoYW5uZWxDcmVhdGlvbhIRCglzZXJ2ZXJfaWQYASABKAUSEgoKY3JlYXRvcl9pZBgCIAEoAxIMCgRuYW1lGAMgASgJEgwKBHR5cGUYBCABKAkSEwoLZGVzY3JpcHRpb24YBSABKAkSDQoFdXNlcnMYBiADKAUSDQoFcm9sZXMYByADKAUSCQoBeBgIIAEoBRIJCgF5GAkgASgFIkwKEkJvZHlDaGFubmVsUmVtb3ZlZBIRCglzZXJ2ZXJfaWQYASABKAUSEgoKY2hhbm5lbF9pZBgCIAEoBRIPCgd1c2VyX2lkGAMgASgDIjcKEUJvZHlTZXJ2ZXJSZW1vdmVkEhEKCXNlcnZlcl9pZBgBIAEoBRIPCgd1c2VyX2lkGAIgASgDIkMKE0JvZHlOZXdVc2VySW5TZXJ2ZXISEQoJc2VydmVyX2lkGAEgASgFEhkKBHVzZXIYAiABKAsyCy50eXBlcy5Vc2VyIjsKEE5ld1NlcnZlckNyZWF0ZWQSEAoIYWN0b3JfaWQYASABKAkSFQoNYWN0b3JfYWRkcmVzcxgCIAEoCSIXCgdDb25uZWN0EgwKBHR5cGUYASABKAkiGgoKRGlzY29ubmVjdBIMCgR0eXBlGAEgASgJQhxaGmdpdGh1Yi5jb20vb2t6bW8vbnlvL3Byb3RvYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * @generated from message types.WSMessage
 */
export type WSMessage = Message<"types.WSMessage"> & {
  /**
   * @generated from oneof types.WSMessage.content
   */
  content: {
    /**
     * @generated from field: types.BroadcastChatMessage chat_message = 1;
     */
    value: BroadcastChatMessage;
    case: "chatMessage";
  } | {
    /**
     * @generated from field: types.BroadcastChannelCreation channel_creation = 2;
     */
    value: BroadcastChannelCreation;
    case: "channelCreation";
  } | {
    /**
     * @generated from field: types.BroadcastChannelRemoved channel_removed = 3;
     */
    value: BroadcastChannelRemoved;
    case: "channelRemoved";
  } | {
    /**
     * @generated from field: types.BroadcastNewUserInServer new_user = 4;
     */
    value: BroadcastNewUserInServer;
    case: "newUser";
  } | {
    /**
     * @generated from field: types.BroadcastConnect user_connect = 5;
     */
    value: BroadcastConnect;
    case: "userConnect";
  } | {
    /**
     * @generated from field: types.BroadcastDisconnect user_disconnect = 6;
     */
    value: BroadcastDisconnect;
    case: "userDisconnect";
  } | {
    /**
     * @generated from field: types.BroadcastDeleteChatMessage delete_message = 7;
     */
    value: BroadcastDeleteChatMessage;
    case: "deleteMessage";
  } | {
    /**
     * @generated from field: types.BroadcastEditMessage edit_message = 8;
     */
    value: BroadcastEditMessage;
    case: "editMessage";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.WSMessage.
 * Use `create(WSMessageSchema)` to create a new message.
 */
export const WSMessageSchema: GenMessage<WSMessage> = /*@__PURE__*/
  messageDesc(file_types, 0);

/**
 * @generated from message types.UserLinksRow
 */
export type UserLinksRow = Message<"types.UserLinksRow"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;
};

/**
 * Describes the message types.UserLinksRow.
 * Use `create(UserLinksRowSchema)` to create a new message.
 */
export const UserLinksRowSchema: GenMessage<UserLinksRow> = /*@__PURE__*/
  messageDesc(file_types, 1);

/**
 * @generated from message types.UserFactsRow
 */
export type UserFactsRow = Message<"types.UserFactsRow"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string value = 3;
   */
  value: string;
};

/**
 * Describes the message types.UserFactsRow.
 * Use `create(UserFactsRowSchema)` to create a new message.
 */
export const UserFactsRowSchema: GenMessage<UserFactsRow> = /*@__PURE__*/
  messageDesc(file_types, 2);

/**
 * @generated from message types.User
 */
export type User = Message<"types.User"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from field: optional string avatar = 5;
   */
  avatar?: string;

  /**
   * @generated from field: optional string banner = 6;
   */
  banner?: string;

  /**
   * @generated from field: optional string gradient_top = 7;
   */
  gradientTop?: string;

  /**
   * @generated from field: optional string gradient_bottom = 8;
   */
  gradientBottom?: string;

  /**
   * @generated from field: optional string about = 9;
   */
  about?: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: repeated types.UserLinksRow links = 11;
   */
  links: UserLinksRow[];

  /**
   * @generated from field: repeated types.UserFactsRow facts = 12;
   */
  facts: UserFactsRow[];
};

/**
 * Describes the message types.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_types, 3);

/**
 * @generated from message types.IncomingChatMessage
 */
export type IncomingChatMessage = Message<"types.IncomingChatMessage"> & {
  /**
   * @generated from field: types.User author = 1;
   */
  author?: User;

  /**
   * @generated from field: int32 server_id = 2;
   */
  serverId: number;

  /**
   * @generated from field: int32 channel_id = 3;
   */
  channelId: number;

  /**
   * @generated from field: bytes content = 4;
   */
  content: Uint8Array;

  /**
   * @generated from field: repeated int32 mentions_users = 5;
   */
  mentionsUsers: number[];

  /**
   * @generated from field: repeated int32 mentions_channels = 6;
   */
  mentionsChannels: number[];
};

/**
 * Describes the message types.IncomingChatMessage.
 * Use `create(IncomingChatMessageSchema)` to create a new message.
 */
export const IncomingChatMessageSchema: GenMessage<IncomingChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 4);

/**
 * @generated from message types.EditChatMessage
 */
export type EditChatMessage = Message<"types.EditChatMessage"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * @generated from field: int32 server_id = 2;
   */
  serverId: number;

  /**
   * @generated from field: int32 channel_id = 3;
   */
  channelId: number;

  /**
   * @generated from field: int32 message_id = 4;
   */
  messageId: number;

  /**
   * @generated from field: bytes content = 5;
   */
  content: Uint8Array;

  /**
   * @generated from field: repeated int32 mentions_users = 6;
   */
  mentionsUsers: number[];

  /**
   * @generated from field: repeated int32 mentions_channels = 7;
   */
  mentionsChannels: number[];
};

/**
 * Describes the message types.EditChatMessage.
 * Use `create(EditChatMessageSchema)` to create a new message.
 */
export const EditChatMessageSchema: GenMessage<EditChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 5);

/**
 * @generated from message types.DeleteChatMessage
 */
export type DeleteChatMessage = Message<"types.DeleteChatMessage"> & {
  /**
   * @generated from field: int64 user_id = 1;
   */
  userId: bigint;

  /**
   * @generated from field: int32 server_id = 2;
   */
  serverId: number;

  /**
   * @generated from field: int32 channel_id = 3;
   */
  channelId: number;

  /**
   * @generated from field: int32 message_id = 4;
   */
  messageId: number;
};

/**
 * Describes the message types.DeleteChatMessage.
 * Use `create(DeleteChatMessageSchema)` to create a new message.
 */
export const DeleteChatMessageSchema: GenMessage<DeleteChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 6);

/**
 * @generated from message types.BroadcastChatMessage
 */
export type BroadcastChatMessage = Message<"types.BroadcastChatMessage"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: types.User author = 2;
   */
  author?: User;

  /**
   * @generated from field: int32 server_id = 3;
   */
  serverId: number;

  /**
   * @generated from field: int32 channel_id = 4;
   */
  channelId: number;

  /**
   * @generated from field: bytes content = 5;
   */
  content: Uint8Array;

  /**
   * @generated from field: repeated int32 mentions_users = 6;
   */
  mentionsUsers: number[];

  /**
   * @generated from field: repeated int32 mentions_channels = 7;
   */
  mentionsChannels: number[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message types.BroadcastChatMessage.
 * Use `create(BroadcastChatMessageSchema)` to create a new message.
 */
export const BroadcastChatMessageSchema: GenMessage<BroadcastChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 7);

/**
 * @generated from message types.BroadcastEditMessage
 */
export type BroadcastEditMessage = Message<"types.BroadcastEditMessage"> & {
  /**
   * @generated from field: int32 message_id = 1;
   */
  messageId: number;

  /**
   * @generated from field: int32 server_id = 2;
   */
  serverId: number;

  /**
   * @generated from field: int32 channel_id = 3;
   */
  channelId: number;

  /**
   * @generated from field: bytes content = 4;
   */
  content: Uint8Array;

  /**
   * @generated from field: repeated int32 mentions_users = 5;
   */
  mentionsUsers: number[];

  /**
   * @generated from field: repeated int32 mentions_channels = 6;
   */
  mentionsChannels: number[];

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.BroadcastEditMessage.
 * Use `create(BroadcastEditMessageSchema)` to create a new message.
 */
export const BroadcastEditMessageSchema: GenMessage<BroadcastEditMessage> = /*@__PURE__*/
  messageDesc(file_types, 8);

/**
 * @generated from message types.BroadcastDeleteChatMessage
 */
export type BroadcastDeleteChatMessage = Message<"types.BroadcastDeleteChatMessage"> & {
  /**
   * @generated from field: int32 message_id = 1;
   */
  messageId: number;

  /**
   * @generated from field: int32 server_id = 2;
   */
  serverId: number;

  /**
   * @generated from field: int32 channel_id = 3;
   */
  channelId: number;
};

/**
 * Describes the message types.BroadcastDeleteChatMessage.
 * Use `create(BroadcastDeleteChatMessageSchema)` to create a new message.
 */
export const BroadcastDeleteChatMessageSchema: GenMessage<BroadcastDeleteChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 9);

/**
 * @generated from message types.BroadcastChannelRemoved
 */
export type BroadcastChannelRemoved = Message<"types.BroadcastChannelRemoved"> & {
  /**
   * @generated from field: int32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: int32 channel_id = 2;
   */
  channelId: number;

  /**
   * @generated from field: string actor_id = 3;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 4;
   */
  actorAddress: string;
};

/**
 * Describes the message types.BroadcastChannelRemoved.
 * Use `create(BroadcastChannelRemovedSchema)` to create a new message.
 */
export const BroadcastChannelRemovedSchema: GenMessage<BroadcastChannelRemoved> = /*@__PURE__*/
  messageDesc(file_types, 10);

/**
 * @generated from message types.BroadcastNewUserInServer
 */
export type BroadcastNewUserInServer = Message<"types.BroadcastNewUserInServer"> & {
  /**
   * @generated from field: int32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: types.User user = 2;
   */
  user?: User;
};

/**
 * Describes the message types.BroadcastNewUserInServer.
 * Use `create(BroadcastNewUserInServerSchema)` to create a new message.
 */
export const BroadcastNewUserInServerSchema: GenMessage<BroadcastNewUserInServer> = /*@__PURE__*/
  messageDesc(file_types, 11);

/**
 * @generated from message types.BroadcastServerRemoved
 */
export type BroadcastServerRemoved = Message<"types.BroadcastServerRemoved"> & {
  /**
   * @generated from field: int32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 3;
   */
  actorAddress: string;
};

/**
 * Describes the message types.BroadcastServerRemoved.
 * Use `create(BroadcastServerRemovedSchema)` to create a new message.
 */
export const BroadcastServerRemovedSchema: GenMessage<BroadcastServerRemoved> = /*@__PURE__*/
  messageDesc(file_types, 12);

/**
 * @generated from message types.BroadcastChannelCreation
 */
export type BroadcastChannelCreation = Message<"types.BroadcastChannelCreation"> & {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: int32 server_id = 2;
   */
  serverId: number;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * @generated from field: optional string description = 5;
   */
  description?: string;

  /**
   * @generated from field: repeated int32 users = 6;
   */
  users: number[];

  /**
   * @generated from field: repeated int32 roles = 7;
   */
  roles: number[];

  /**
   * @generated from field: int32 x = 8;
   */
  x: number;

  /**
   * @generated from field: int32 y = 9;
   */
  y: number;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string actor_id = 12;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 13;
   */
  actorAddress: string;
};

/**
 * Describes the message types.BroadcastChannelCreation.
 * Use `create(BroadcastChannelCreationSchema)` to create a new message.
 */
export const BroadcastChannelCreationSchema: GenMessage<BroadcastChannelCreation> = /*@__PURE__*/
  messageDesc(file_types, 13);

/**
 * @generated from message types.BroadcastConnect
 */
export type BroadcastConnect = Message<"types.BroadcastConnect"> & {
  /**
   * @generated from field: int32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: int32 user_id = 2;
   */
  userId: number;

  /**
   * @generated from field: repeated int32 users = 3;
   */
  users: number[];

  /**
   * @generated from field: string type = 4;
   */
  type: string;
};

/**
 * Describes the message types.BroadcastConnect.
 * Use `create(BroadcastConnectSchema)` to create a new message.
 */
export const BroadcastConnectSchema: GenMessage<BroadcastConnect> = /*@__PURE__*/
  messageDesc(file_types, 14);

/**
 * @generated from message types.BroadcastDisconnect
 */
export type BroadcastDisconnect = Message<"types.BroadcastDisconnect"> & {
  /**
   * @generated from field: int32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: int32 user_id = 2;
   */
  userId: number;

  /**
   * @generated from field: string type = 3;
   */
  type: string;
};

/**
 * Describes the message types.BroadcastDisconnect.
 * Use `create(BroadcastDisconnectSchema)` to create a new message.
 */
export const BroadcastDisconnectSchema: GenMessage<BroadcastDisconnect> = /*@__PURE__*/
  messageDesc(file_types, 15);

/**
 * @generated from message types.BodyChannelCreation
 */
export type BodyChannelCreation = Message<"types.BodyChannelCreation"> & {
  /**
   * @generated from field: int32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: int64 creator_id = 2;
   */
  creatorId: bigint;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: repeated int32 users = 6;
   */
  users: number[];

  /**
   * @generated from field: repeated int32 roles = 7;
   */
  roles: number[];

  /**
   * @generated from field: int32 x = 8;
   */
  x: number;

  /**
   * @generated from field: int32 y = 9;
   */
  y: number;
};

/**
 * Describes the message types.BodyChannelCreation.
 * Use `create(BodyChannelCreationSchema)` to create a new message.
 */
export const BodyChannelCreationSchema: GenMessage<BodyChannelCreation> = /*@__PURE__*/
  messageDesc(file_types, 16);

/**
 * @generated from message types.BodyChannelRemoved
 */
export type BodyChannelRemoved = Message<"types.BodyChannelRemoved"> & {
  /**
   * @generated from field: int32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: int32 channel_id = 2;
   */
  channelId: number;

  /**
   * @generated from field: int64 user_id = 3;
   */
  userId: bigint;
};

/**
 * Describes the message types.BodyChannelRemoved.
 * Use `create(BodyChannelRemovedSchema)` to create a new message.
 */
export const BodyChannelRemovedSchema: GenMessage<BodyChannelRemoved> = /*@__PURE__*/
  messageDesc(file_types, 17);

/**
 * @generated from message types.BodyServerRemoved
 */
export type BodyServerRemoved = Message<"types.BodyServerRemoved"> & {
  /**
   * @generated from field: int32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: int64 user_id = 2;
   */
  userId: bigint;
};

/**
 * Describes the message types.BodyServerRemoved.
 * Use `create(BodyServerRemovedSchema)` to create a new message.
 */
export const BodyServerRemovedSchema: GenMessage<BodyServerRemoved> = /*@__PURE__*/
  messageDesc(file_types, 18);

/**
 * @generated from message types.BodyNewUserInServer
 */
export type BodyNewUserInServer = Message<"types.BodyNewUserInServer"> & {
  /**
   * @generated from field: int32 server_id = 1;
   */
  serverId: number;

  /**
   * @generated from field: types.User user = 2;
   */
  user?: User;
};

/**
 * Describes the message types.BodyNewUserInServer.
 * Use `create(BodyNewUserInServerSchema)` to create a new message.
 */
export const BodyNewUserInServerSchema: GenMessage<BodyNewUserInServer> = /*@__PURE__*/
  messageDesc(file_types, 19);

/**
 * @generated from message types.NewServerCreated
 */
export type NewServerCreated = Message<"types.NewServerCreated"> & {
  /**
   * @generated from field: string actor_id = 1;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 2;
   */
  actorAddress: string;
};

/**
 * Describes the message types.NewServerCreated.
 * Use `create(NewServerCreatedSchema)` to create a new message.
 */
export const NewServerCreatedSchema: GenMessage<NewServerCreated> = /*@__PURE__*/
  messageDesc(file_types, 20);

/**
 * @generated from message types.Connect
 */
export type Connect = Message<"types.Connect"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message types.Connect.
 * Use `create(ConnectSchema)` to create a new message.
 */
export const ConnectSchema: GenMessage<Connect> = /*@__PURE__*/
  messageDesc(file_types, 21);

/**
 * @generated from message types.Disconnect
 */
export type Disconnect = Message<"types.Disconnect"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message types.Disconnect.
 * Use `create(DisconnectSchema)` to create a new message.
 */
export const DisconnectSchema: GenMessage<Disconnect> = /*@__PURE__*/
  messageDesc(file_types, 22);

