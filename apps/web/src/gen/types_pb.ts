// @generated by protoc-gen-es v2.3.0 with parameter "target=ts"
// @generated from file types.proto (package types, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file types.proto.
 */
export const file_types: GenFile = /*@__PURE__*/
  fileDesc("Cgt0eXBlcy5wcm90bxIFdHlwZXMioAUKCVdTTWVzc2FnZRIzCgxjaGF0X21lc3NhZ2UYASABKAsyGy50eXBlcy5Ccm9hZGNhc3RDaGF0TWVzc2FnZUgAEjsKEGNoYW5uZWxfY3JlYXRpb24YAiABKAsyHy50eXBlcy5Ccm9hZGNhc3RDaGFubmVsQ3JlYXRpb25IABI5Cg9jaGFubmVsX3JlbW92ZWQYAyABKAsyHi50eXBlcy5Ccm9hZGNhc3RDaGFubmVsUmVtb3ZlZEgAEjMKCG5ld191c2VyGAQgASgLMh8udHlwZXMuQnJvYWRjYXN0TmV3VXNlckluU2VydmVySAASLwoMdXNlcl9jb25uZWN0GAUgASgLMhcudHlwZXMuQnJvYWRjYXN0Q29ubmVjdEgAEjUKD3VzZXJfZGlzY29ubmVjdBgGIAEoCzIaLnR5cGVzLkJyb2FkY2FzdERpc2Nvbm5lY3RIABI7Cg5kZWxldGVfbWVzc2FnZRgHIAEoCzIhLnR5cGVzLkJyb2FkY2FzdERlbGV0ZUNoYXRNZXNzYWdlSAASMwoMZWRpdF9tZXNzYWdlGAggASgLMhsudHlwZXMuQnJvYWRjYXN0RWRpdE1lc3NhZ2VIABIwCg1mcmllbmRfaW52aXRlGAkgASgLMhcudHlwZXMuU2VuZEZyaWVuZEludml0ZUgAEjIKDWFjY2VwdF9mcmllbmQYCiABKAsyGS50eXBlcy5BY2NlcHRGcmllbmRJbnZpdGVIABIsCg1kZWxldGVfZnJpZW5kGAsgASgLMhMudHlwZXMuRGVsZXRlRnJpZW5kSAASOAoMdXNlcl9jaGFuZ2VkGAwgASgLMiAudHlwZXMuQnJvYWRjYXN0VXNlckluZm9ybWF0aW9uc0gAQgkKB2NvbnRlbnQiNgoMVXNlckxpbmtzUm93EgoKAmlkGAEgASgJEg0KBWxhYmVsGAIgASgJEgsKA3VybBgDIAEoCSI4CgxVc2VyRmFjdHNSb3cSCgoCaWQYASABKAkSDQoFbGFiZWwYAiABKAkSDQoFdmFsdWUYAyABKAkinQIKBFVzZXISCgoCaWQYASABKAkSDQoFZW1haWwYAiABKAkSEAoIdXNlcm5hbWUYAyABKAkSFAoMZGlzcGxheV9uYW1lGAQgASgJEhMKBmF2YXRhchgFIAEoCUgAiAEBEhMKBmJhbm5lchgGIAEoCUgBiAEBEhcKCm1haW5fY29sb3IYByABKAlIAogBARISCgVhYm91dBgIIAEoDEgDiAEBEi4KCmNyZWF0ZWRfYXQYCSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg0KBWxpbmtzGAogASgMEg0KBWZhY3RzGAsgASgMQgkKB19hdmF0YXJCCQoHX2Jhbm5lckINCgtfbWFpbl9jb2xvckIICgZfYWJvdXQinQEKE0luY29taW5nQ2hhdE1lc3NhZ2USGwoGYXV0aG9yGAEgASgLMgsudHlwZXMuVXNlchIRCglzZXJ2ZXJfaWQYAiABKAkSEgoKY2hhbm5lbF9pZBgDIAEoCRIPCgdjb250ZW50GAQgASgMEhYKDm1lbnRpb25zX3VzZXJzGAUgAygJEhkKEW1lbnRpb25zX2NoYW5uZWxzGAYgAygJIqEBCg9FZGl0Q2hhdE1lc3NhZ2USDwoHdXNlcl9pZBgBIAEoCRIRCglzZXJ2ZXJfaWQYAiABKAkSEgoKY2hhbm5lbF9pZBgDIAEoCRISCgptZXNzYWdlX2lkGAQgASgJEg8KB2NvbnRlbnQYBSABKAwSFgoObWVudGlvbnNfdXNlcnMYBiADKAkSGQoRbWVudGlvbnNfY2hhbm5lbHMYByADKAkiXwoRRGVsZXRlQ2hhdE1lc3NhZ2USDwoHdXNlcl9pZBgBIAEoCRIRCglzZXJ2ZXJfaWQYAiABKAkSEgoKY2hhbm5lbF9pZBgDIAEoCRISCgptZXNzYWdlX2lkGAQgASgJItoBChRCcm9hZGNhc3RDaGF0TWVzc2FnZRIKCgJpZBgBIAEoCRIbCgZhdXRob3IYAiABKAsyCy50eXBlcy5Vc2VyEhEKCXNlcnZlcl9pZBgDIAEoCRISCgpjaGFubmVsX2lkGAQgASgJEg8KB2NvbnRlbnQYBSABKAwSFgoObWVudGlvbnNfdXNlcnMYBiADKAkSGQoRbWVudGlvbnNfY2hhbm5lbHMYByADKAkSLgoKY3JlYXRlZF9hdBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAixQEKFEJyb2FkY2FzdEVkaXRNZXNzYWdlEhIKCm1lc3NhZ2VfaWQYASABKAkSEQoJc2VydmVyX2lkGAIgASgJEhIKCmNoYW5uZWxfaWQYAyABKAkSDwoHY29udGVudBgEIAEoDBIWCg5tZW50aW9uc191c2VycxgFIAMoCRIZChFtZW50aW9uc19jaGFubmVscxgGIAMoCRIuCgp1cGRhdGVkX2F0GAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJXChpCcm9hZGNhc3REZWxldGVDaGF0TWVzc2FnZRISCgptZXNzYWdlX2lkGAEgASgJEhEKCXNlcnZlcl9pZBgCIAEoCRISCgpjaGFubmVsX2lkGAMgASgJImkKF0Jyb2FkY2FzdENoYW5uZWxSZW1vdmVkEhEKCXNlcnZlcl9pZBgBIAEoCRISCgpjaGFubmVsX2lkGAIgASgJEhAKCGFjdG9yX2lkGAMgASgJEhUKDWFjdG9yX2FkZHJlc3MYBCABKAkiSAoYQnJvYWRjYXN0TmV3VXNlckluU2VydmVyEhEKCXNlcnZlcl9pZBgBIAEoCRIZCgR1c2VyGAIgASgLMgsudHlwZXMuVXNlciJUChZCcm9hZGNhc3RTZXJ2ZXJSZW1vdmVkEhEKCXNlcnZlcl9pZBgBIAEoCRIQCghhY3Rvcl9pZBgCIAEoCRIVCg1hY3Rvcl9hZGRyZXNzGAMgASgJIskCChhCcm9hZGNhc3RDaGFubmVsQ3JlYXRpb24SCgoCaWQYASABKAkSEQoJc2VydmVyX2lkGAIgASgJEgwKBG5hbWUYAyABKAkSDAoEdHlwZRgEIAEoCRIYCgtkZXNjcmlwdGlvbhgFIAEoCUgAiAEBEhoKBXVzZXJzGAYgAygLMgsudHlwZXMuVXNlchINCgVyb2xlcxgHIAMoCRIJCgF4GAggASgFEgkKAXkYCSABKAUSLgoKY3JlYXRlZF9hdBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgLIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoIYWN0b3JfaWQYDCABKAkSFQoNYWN0b3JfYWRkcmVzcxgNIAEoCUIOCgxfZGVzY3JpcHRpb24iOgoPQ2hhbm5lbFN0YXJ0aW5nEhAKCGFjdG9yX2lkGAEgASgJEhUKDWFjdG9yX2FkZHJlc3MYAiABKAkiUwoQQnJvYWRjYXN0Q29ubmVjdBIRCglzZXJ2ZXJfaWQYASABKAkSDwoHdXNlcl9pZBgCIAEoCRINCgV1c2VycxgDIAMoCRIMCgR0eXBlGAQgASgJIkcKE0Jyb2FkY2FzdERpc2Nvbm5lY3QSEQoJc2VydmVyX2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSDAoEdHlwZRgDIAEoCSKtAQoTQm9keUNoYW5uZWxDcmVhdGlvbhIRCglzZXJ2ZXJfaWQYASABKAkSEgoKY3JlYXRvcl9pZBgCIAEoCRIMCgRuYW1lGAMgASgJEgwKBHR5cGUYBCABKAkSEwoLZGVzY3JpcHRpb24YBSABKAkSDQoFdXNlcnMYBiADKAkSDQoFcm9sZXMYByADKAkSCQoBeBgIIAEoBRIJCgF5GAkgASgFEgoKAmlkGAogASgJIkQKDFN0YXJ0Q2hhbm5lbBIRCglzZXJ2ZXJfaWQYASABKAkSEgoKY2hhbm5lbF9pZBgCIAEoCRINCgV1c2VycxgDIAMoCSJsCgtLaWxsQ2hhbm5lbBIRCglzZXJ2ZXJfaWQYASABKAkSEgoKY2hhbm5lbF9pZBgCIAEoCRINCgV1c2VycxgDIAMoCRIQCghhY3Rvcl9pZBgEIAEoCRIVCg1hY3Rvcl9hZGRyZXNzGAUgASgJIkwKEkJvZHlDaGFubmVsUmVtb3ZlZBIRCglzZXJ2ZXJfaWQYASABKAkSEgoKY2hhbm5lbF9pZBgCIAEoCRIPCgd1c2VyX2lkGAMgASgJIjcKEUJvZHlTZXJ2ZXJSZW1vdmVkEhEKCXNlcnZlcl9pZBgBIAEoCRIPCgd1c2VyX2lkGAIgASgJIkMKE0JvZHlOZXdVc2VySW5TZXJ2ZXISEQoJc2VydmVyX2lkGAEgASgJEhkKBHVzZXIYAiABKAsyCy50eXBlcy5Vc2VyIjsKEE5ld1NlcnZlckNyZWF0ZWQSEAoIYWN0b3JfaWQYASABKAkSFQoNYWN0b3JfYWRkcmVzcxgCIAEoCSI7ChVCcm9hZGNhc3RBY2NlcHRGcmllbmQSDwoHdXNlcl9pZBgBIAEoCRIRCglmcmllbmRfaWQYAiABKAkiQAoQU2VuZEZyaWVuZEludml0ZRIRCglpbnZpdGVfaWQYASABKAkSGQoEdXNlchgCIAEoCzILLnR5cGVzLlVzZXIiZgoSQWNjZXB0RnJpZW5kSW52aXRlEhEKCWludml0ZV9pZBgBIAEoCRISCgpjaGFubmVsX2lkGAIgASgJEhkKBHVzZXIYAyABKAsyCy50eXBlcy5Vc2VyEg4KBnNlbmRlchgEIAEoCCIyCgxEZWxldGVGcmllbmQSEQoJaW52aXRlX2lkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkiFwoHQ29ubmVjdBIMCgR0eXBlGAEgASgJIhoKCkRpc2Nvbm5lY3QSDAoEdHlwZRgBIAEoCSKkAgoQVXNlckluZm9ybWF0aW9ucxIVCgh1c2VybmFtZRgBIAEoCUgAiAEBEhkKDGRpc3BsYXlfbmFtZRgCIAEoCUgBiAEBEhMKBmF2YXRhchgDIAEoCUgCiAEBEhMKBmJhbm5lchgEIAEoCUgDiAEBEhIKBWZhY3RzGAUgASgMSASIAQESEgoFbGlua3MYBiABKAxIBYgBARISCgVhYm91dBgHIAEoDEgGiAEBEhcKCm1haW5fY29sb3IYCCABKAlIB4gBAUILCglfdXNlcm5hbWVCDwoNX2Rpc3BsYXlfbmFtZUIJCgdfYXZhdGFyQgkKB19iYW5uZXJCCAoGX2ZhY3RzQggKBl9saW5rc0IICgZfYWJvdXRCDQoLX21haW5fY29sb3IiXgoXVXNlckNoYW5nZWRJbmZvcm1hdGlvbnMSDwoHdXNlcl9pZBgBIAEoCRIyChF1c2VyX2luZm9ybWF0aW9ucxgCIAEoCzIXLnR5cGVzLlVzZXJJbmZvcm1hdGlvbnMicwoZQnJvYWRjYXN0VXNlckluZm9ybWF0aW9ucxIPCgd1c2VyX2lkGAEgASgJEhEKCXNlcnZlcl9pZBgCIAEoCRIyChF1c2VyX2luZm9ybWF0aW9ucxgDIAEoCzIXLnR5cGVzLlVzZXJJbmZvcm1hdGlvbnNCHFoaZ2l0aHViLmNvbS9va3ptby9ueW8vcHJvdG9iBnByb3RvMw", [file_google_protobuf_timestamp]);

/**
 * @generated from message types.WSMessage
 */
export type WSMessage = Message<"types.WSMessage"> & {
  /**
   * @generated from oneof types.WSMessage.content
   */
  content: {
    /**
     * @generated from field: types.BroadcastChatMessage chat_message = 1;
     */
    value: BroadcastChatMessage;
    case: "chatMessage";
  } | {
    /**
     * @generated from field: types.BroadcastChannelCreation channel_creation = 2;
     */
    value: BroadcastChannelCreation;
    case: "channelCreation";
  } | {
    /**
     * @generated from field: types.BroadcastChannelRemoved channel_removed = 3;
     */
    value: BroadcastChannelRemoved;
    case: "channelRemoved";
  } | {
    /**
     * @generated from field: types.BroadcastNewUserInServer new_user = 4;
     */
    value: BroadcastNewUserInServer;
    case: "newUser";
  } | {
    /**
     * @generated from field: types.BroadcastConnect user_connect = 5;
     */
    value: BroadcastConnect;
    case: "userConnect";
  } | {
    /**
     * @generated from field: types.BroadcastDisconnect user_disconnect = 6;
     */
    value: BroadcastDisconnect;
    case: "userDisconnect";
  } | {
    /**
     * @generated from field: types.BroadcastDeleteChatMessage delete_message = 7;
     */
    value: BroadcastDeleteChatMessage;
    case: "deleteMessage";
  } | {
    /**
     * @generated from field: types.BroadcastEditMessage edit_message = 8;
     */
    value: BroadcastEditMessage;
    case: "editMessage";
  } | {
    /**
     * @generated from field: types.SendFriendInvite friend_invite = 9;
     */
    value: SendFriendInvite;
    case: "friendInvite";
  } | {
    /**
     * @generated from field: types.AcceptFriendInvite accept_friend = 10;
     */
    value: AcceptFriendInvite;
    case: "acceptFriend";
  } | {
    /**
     * @generated from field: types.DeleteFriend delete_friend = 11;
     */
    value: DeleteFriend;
    case: "deleteFriend";
  } | {
    /**
     * @generated from field: types.BroadcastUserInformations user_changed = 12;
     */
    value: BroadcastUserInformations;
    case: "userChanged";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message types.WSMessage.
 * Use `create(WSMessageSchema)` to create a new message.
 */
export const WSMessageSchema: GenMessage<WSMessage> = /*@__PURE__*/
  messageDesc(file_types, 0);

/**
 * @generated from message types.UserLinksRow
 */
export type UserLinksRow = Message<"types.UserLinksRow"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;
};

/**
 * Describes the message types.UserLinksRow.
 * Use `create(UserLinksRowSchema)` to create a new message.
 */
export const UserLinksRowSchema: GenMessage<UserLinksRow> = /*@__PURE__*/
  messageDesc(file_types, 1);

/**
 * @generated from message types.UserFactsRow
 */
export type UserFactsRow = Message<"types.UserFactsRow"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string value = 3;
   */
  value: string;
};

/**
 * Describes the message types.UserFactsRow.
 * Use `create(UserFactsRowSchema)` to create a new message.
 */
export const UserFactsRowSchema: GenMessage<UserFactsRow> = /*@__PURE__*/
  messageDesc(file_types, 2);

/**
 * @generated from message types.User
 */
export type User = Message<"types.User"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string username = 3;
   */
  username: string;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from field: optional string avatar = 5;
   */
  avatar?: string;

  /**
   * @generated from field: optional string banner = 6;
   */
  banner?: string;

  /**
   * @generated from field: optional string main_color = 7;
   */
  mainColor?: string;

  /**
   * @generated from field: optional bytes about = 8;
   */
  about?: Uint8Array;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 9;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bytes links = 10;
   */
  links: Uint8Array;

  /**
   * @generated from field: bytes facts = 11;
   */
  facts: Uint8Array;
};

/**
 * Describes the message types.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_types, 3);

/**
 * @generated from message types.IncomingChatMessage
 */
export type IncomingChatMessage = Message<"types.IncomingChatMessage"> & {
  /**
   * @generated from field: types.User author = 1;
   */
  author?: User;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 3;
   */
  channelId: string;

  /**
   * @generated from field: bytes content = 4;
   */
  content: Uint8Array;

  /**
   * @generated from field: repeated string mentions_users = 5;
   */
  mentionsUsers: string[];

  /**
   * @generated from field: repeated string mentions_channels = 6;
   */
  mentionsChannels: string[];
};

/**
 * Describes the message types.IncomingChatMessage.
 * Use `create(IncomingChatMessageSchema)` to create a new message.
 */
export const IncomingChatMessageSchema: GenMessage<IncomingChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 4);

/**
 * @generated from message types.EditChatMessage
 */
export type EditChatMessage = Message<"types.EditChatMessage"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 3;
   */
  channelId: string;

  /**
   * @generated from field: string message_id = 4;
   */
  messageId: string;

  /**
   * @generated from field: bytes content = 5;
   */
  content: Uint8Array;

  /**
   * @generated from field: repeated string mentions_users = 6;
   */
  mentionsUsers: string[];

  /**
   * @generated from field: repeated string mentions_channels = 7;
   */
  mentionsChannels: string[];
};

/**
 * Describes the message types.EditChatMessage.
 * Use `create(EditChatMessageSchema)` to create a new message.
 */
export const EditChatMessageSchema: GenMessage<EditChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 5);

/**
 * @generated from message types.DeleteChatMessage
 */
export type DeleteChatMessage = Message<"types.DeleteChatMessage"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 3;
   */
  channelId: string;

  /**
   * @generated from field: string message_id = 4;
   */
  messageId: string;
};

/**
 * Describes the message types.DeleteChatMessage.
 * Use `create(DeleteChatMessageSchema)` to create a new message.
 */
export const DeleteChatMessageSchema: GenMessage<DeleteChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 6);

/**
 * @generated from message types.BroadcastChatMessage
 */
export type BroadcastChatMessage = Message<"types.BroadcastChatMessage"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: types.User author = 2;
   */
  author?: User;

  /**
   * @generated from field: string server_id = 3;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 4;
   */
  channelId: string;

  /**
   * @generated from field: bytes content = 5;
   */
  content: Uint8Array;

  /**
   * @generated from field: repeated string mentions_users = 6;
   */
  mentionsUsers: string[];

  /**
   * @generated from field: repeated string mentions_channels = 7;
   */
  mentionsChannels: string[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message types.BroadcastChatMessage.
 * Use `create(BroadcastChatMessageSchema)` to create a new message.
 */
export const BroadcastChatMessageSchema: GenMessage<BroadcastChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 7);

/**
 * @generated from message types.BroadcastEditMessage
 */
export type BroadcastEditMessage = Message<"types.BroadcastEditMessage"> & {
  /**
   * @generated from field: string message_id = 1;
   */
  messageId: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 3;
   */
  channelId: string;

  /**
   * @generated from field: bytes content = 4;
   */
  content: Uint8Array;

  /**
   * @generated from field: repeated string mentions_users = 5;
   */
  mentionsUsers: string[];

  /**
   * @generated from field: repeated string mentions_channels = 6;
   */
  mentionsChannels: string[];

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message types.BroadcastEditMessage.
 * Use `create(BroadcastEditMessageSchema)` to create a new message.
 */
export const BroadcastEditMessageSchema: GenMessage<BroadcastEditMessage> = /*@__PURE__*/
  messageDesc(file_types, 8);

/**
 * @generated from message types.BroadcastDeleteChatMessage
 */
export type BroadcastDeleteChatMessage = Message<"types.BroadcastDeleteChatMessage"> & {
  /**
   * @generated from field: string message_id = 1;
   */
  messageId: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 3;
   */
  channelId: string;
};

/**
 * Describes the message types.BroadcastDeleteChatMessage.
 * Use `create(BroadcastDeleteChatMessageSchema)` to create a new message.
 */
export const BroadcastDeleteChatMessageSchema: GenMessage<BroadcastDeleteChatMessage> = /*@__PURE__*/
  messageDesc(file_types, 9);

/**
 * @generated from message types.BroadcastChannelRemoved
 */
export type BroadcastChannelRemoved = Message<"types.BroadcastChannelRemoved"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 2;
   */
  channelId: string;

  /**
   * @generated from field: string actor_id = 3;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 4;
   */
  actorAddress: string;
};

/**
 * Describes the message types.BroadcastChannelRemoved.
 * Use `create(BroadcastChannelRemovedSchema)` to create a new message.
 */
export const BroadcastChannelRemovedSchema: GenMessage<BroadcastChannelRemoved> = /*@__PURE__*/
  messageDesc(file_types, 10);

/**
 * @generated from message types.BroadcastNewUserInServer
 */
export type BroadcastNewUserInServer = Message<"types.BroadcastNewUserInServer"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: types.User user = 2;
   */
  user?: User;
};

/**
 * Describes the message types.BroadcastNewUserInServer.
 * Use `create(BroadcastNewUserInServerSchema)` to create a new message.
 */
export const BroadcastNewUserInServerSchema: GenMessage<BroadcastNewUserInServer> = /*@__PURE__*/
  messageDesc(file_types, 11);

/**
 * @generated from message types.BroadcastServerRemoved
 */
export type BroadcastServerRemoved = Message<"types.BroadcastServerRemoved"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string actor_id = 2;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 3;
   */
  actorAddress: string;
};

/**
 * Describes the message types.BroadcastServerRemoved.
 * Use `create(BroadcastServerRemovedSchema)` to create a new message.
 */
export const BroadcastServerRemovedSchema: GenMessage<BroadcastServerRemoved> = /*@__PURE__*/
  messageDesc(file_types, 12);

/**
 * @generated from message types.BroadcastChannelCreation
 */
export type BroadcastChannelCreation = Message<"types.BroadcastChannelCreation"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * @generated from field: optional string description = 5;
   */
  description?: string;

  /**
   * @generated from field: repeated types.User users = 6;
   */
  users: User[];

  /**
   * @generated from field: repeated string roles = 7;
   */
  roles: string[];

  /**
   * @generated from field: int32 x = 8;
   */
  x: number;

  /**
   * @generated from field: int32 y = 9;
   */
  y: number;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 10;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 11;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string actor_id = 12;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 13;
   */
  actorAddress: string;
};

/**
 * Describes the message types.BroadcastChannelCreation.
 * Use `create(BroadcastChannelCreationSchema)` to create a new message.
 */
export const BroadcastChannelCreationSchema: GenMessage<BroadcastChannelCreation> = /*@__PURE__*/
  messageDesc(file_types, 13);

/**
 * @generated from message types.ChannelStarting
 */
export type ChannelStarting = Message<"types.ChannelStarting"> & {
  /**
   * @generated from field: string actor_id = 1;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 2;
   */
  actorAddress: string;
};

/**
 * Describes the message types.ChannelStarting.
 * Use `create(ChannelStartingSchema)` to create a new message.
 */
export const ChannelStartingSchema: GenMessage<ChannelStarting> = /*@__PURE__*/
  messageDesc(file_types, 14);

/**
 * @generated from message types.BroadcastConnect
 */
export type BroadcastConnect = Message<"types.BroadcastConnect"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: repeated string users = 3;
   */
  users: string[];

  /**
   * @generated from field: string type = 4;
   */
  type: string;
};

/**
 * Describes the message types.BroadcastConnect.
 * Use `create(BroadcastConnectSchema)` to create a new message.
 */
export const BroadcastConnectSchema: GenMessage<BroadcastConnect> = /*@__PURE__*/
  messageDesc(file_types, 15);

/**
 * @generated from message types.BroadcastDisconnect
 */
export type BroadcastDisconnect = Message<"types.BroadcastDisconnect"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: string type = 3;
   */
  type: string;
};

/**
 * Describes the message types.BroadcastDisconnect.
 * Use `create(BroadcastDisconnectSchema)` to create a new message.
 */
export const BroadcastDisconnectSchema: GenMessage<BroadcastDisconnect> = /*@__PURE__*/
  messageDesc(file_types, 16);

/**
 * @generated from message types.BodyChannelCreation
 */
export type BodyChannelCreation = Message<"types.BodyChannelCreation"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string creator_id = 2;
   */
  creatorId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: repeated string users = 6;
   */
  users: string[];

  /**
   * @generated from field: repeated string roles = 7;
   */
  roles: string[];

  /**
   * @generated from field: int32 x = 8;
   */
  x: number;

  /**
   * @generated from field: int32 y = 9;
   */
  y: number;

  /**
   * @generated from field: string id = 10;
   */
  id: string;
};

/**
 * Describes the message types.BodyChannelCreation.
 * Use `create(BodyChannelCreationSchema)` to create a new message.
 */
export const BodyChannelCreationSchema: GenMessage<BodyChannelCreation> = /*@__PURE__*/
  messageDesc(file_types, 17);

/**
 * @generated from message types.StartChannel
 */
export type StartChannel = Message<"types.StartChannel"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 2;
   */
  channelId: string;

  /**
   * @generated from field: repeated string users = 3;
   */
  users: string[];
};

/**
 * Describes the message types.StartChannel.
 * Use `create(StartChannelSchema)` to create a new message.
 */
export const StartChannelSchema: GenMessage<StartChannel> = /*@__PURE__*/
  messageDesc(file_types, 18);

/**
 * @generated from message types.KillChannel
 */
export type KillChannel = Message<"types.KillChannel"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 2;
   */
  channelId: string;

  /**
   * @generated from field: repeated string users = 3;
   */
  users: string[];

  /**
   * @generated from field: string actor_id = 4;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 5;
   */
  actorAddress: string;
};

/**
 * Describes the message types.KillChannel.
 * Use `create(KillChannelSchema)` to create a new message.
 */
export const KillChannelSchema: GenMessage<KillChannel> = /*@__PURE__*/
  messageDesc(file_types, 19);

/**
 * @generated from message types.BodyChannelRemoved
 */
export type BodyChannelRemoved = Message<"types.BodyChannelRemoved"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string channel_id = 2;
   */
  channelId: string;

  /**
   * @generated from field: string user_id = 3;
   */
  userId: string;
};

/**
 * Describes the message types.BodyChannelRemoved.
 * Use `create(BodyChannelRemovedSchema)` to create a new message.
 */
export const BodyChannelRemovedSchema: GenMessage<BodyChannelRemoved> = /*@__PURE__*/
  messageDesc(file_types, 20);

/**
 * @generated from message types.BodyServerRemoved
 */
export type BodyServerRemoved = Message<"types.BodyServerRemoved"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message types.BodyServerRemoved.
 * Use `create(BodyServerRemovedSchema)` to create a new message.
 */
export const BodyServerRemovedSchema: GenMessage<BodyServerRemoved> = /*@__PURE__*/
  messageDesc(file_types, 21);

/**
 * @generated from message types.BodyNewUserInServer
 */
export type BodyNewUserInServer = Message<"types.BodyNewUserInServer"> & {
  /**
   * @generated from field: string server_id = 1;
   */
  serverId: string;

  /**
   * @generated from field: types.User user = 2;
   */
  user?: User;
};

/**
 * Describes the message types.BodyNewUserInServer.
 * Use `create(BodyNewUserInServerSchema)` to create a new message.
 */
export const BodyNewUserInServerSchema: GenMessage<BodyNewUserInServer> = /*@__PURE__*/
  messageDesc(file_types, 22);

/**
 * @generated from message types.NewServerCreated
 */
export type NewServerCreated = Message<"types.NewServerCreated"> & {
  /**
   * @generated from field: string actor_id = 1;
   */
  actorId: string;

  /**
   * @generated from field: string actor_address = 2;
   */
  actorAddress: string;
};

/**
 * Describes the message types.NewServerCreated.
 * Use `create(NewServerCreatedSchema)` to create a new message.
 */
export const NewServerCreatedSchema: GenMessage<NewServerCreated> = /*@__PURE__*/
  messageDesc(file_types, 23);

/**
 * @generated from message types.BroadcastAcceptFriend
 */
export type BroadcastAcceptFriend = Message<"types.BroadcastAcceptFriend"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string friend_id = 2;
   */
  friendId: string;
};

/**
 * Describes the message types.BroadcastAcceptFriend.
 * Use `create(BroadcastAcceptFriendSchema)` to create a new message.
 */
export const BroadcastAcceptFriendSchema: GenMessage<BroadcastAcceptFriend> = /*@__PURE__*/
  messageDesc(file_types, 24);

/**
 * @generated from message types.SendFriendInvite
 */
export type SendFriendInvite = Message<"types.SendFriendInvite"> & {
  /**
   * @generated from field: string invite_id = 1;
   */
  inviteId: string;

  /**
   * @generated from field: types.User user = 2;
   */
  user?: User;
};

/**
 * Describes the message types.SendFriendInvite.
 * Use `create(SendFriendInviteSchema)` to create a new message.
 */
export const SendFriendInviteSchema: GenMessage<SendFriendInvite> = /*@__PURE__*/
  messageDesc(file_types, 25);

/**
 * @generated from message types.AcceptFriendInvite
 */
export type AcceptFriendInvite = Message<"types.AcceptFriendInvite"> & {
  /**
   * @generated from field: string invite_id = 1;
   */
  inviteId: string;

  /**
   * @generated from field: string channel_id = 2;
   */
  channelId: string;

  /**
   * @generated from field: types.User user = 3;
   */
  user?: User;

  /**
   * @generated from field: bool sender = 4;
   */
  sender: boolean;
};

/**
 * Describes the message types.AcceptFriendInvite.
 * Use `create(AcceptFriendInviteSchema)` to create a new message.
 */
export const AcceptFriendInviteSchema: GenMessage<AcceptFriendInvite> = /*@__PURE__*/
  messageDesc(file_types, 26);

/**
 * @generated from message types.DeleteFriend
 */
export type DeleteFriend = Message<"types.DeleteFriend"> & {
  /**
   * @generated from field: string invite_id = 1;
   */
  inviteId: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;
};

/**
 * Describes the message types.DeleteFriend.
 * Use `create(DeleteFriendSchema)` to create a new message.
 */
export const DeleteFriendSchema: GenMessage<DeleteFriend> = /*@__PURE__*/
  messageDesc(file_types, 27);

/**
 * @generated from message types.Connect
 */
export type Connect = Message<"types.Connect"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message types.Connect.
 * Use `create(ConnectSchema)` to create a new message.
 */
export const ConnectSchema: GenMessage<Connect> = /*@__PURE__*/
  messageDesc(file_types, 28);

/**
 * @generated from message types.Disconnect
 */
export type Disconnect = Message<"types.Disconnect"> & {
  /**
   * @generated from field: string type = 1;
   */
  type: string;
};

/**
 * Describes the message types.Disconnect.
 * Use `create(DisconnectSchema)` to create a new message.
 */
export const DisconnectSchema: GenMessage<Disconnect> = /*@__PURE__*/
  messageDesc(file_types, 29);

/**
 * @generated from message types.UserInformations
 */
export type UserInformations = Message<"types.UserInformations"> & {
  /**
   * @generated from field: optional string username = 1;
   */
  username?: string;

  /**
   * @generated from field: optional string display_name = 2;
   */
  displayName?: string;

  /**
   * @generated from field: optional string avatar = 3;
   */
  avatar?: string;

  /**
   * @generated from field: optional string banner = 4;
   */
  banner?: string;

  /**
   * @generated from field: optional bytes facts = 5;
   */
  facts?: Uint8Array;

  /**
   * @generated from field: optional bytes links = 6;
   */
  links?: Uint8Array;

  /**
   * @generated from field: optional bytes about = 7;
   */
  about?: Uint8Array;

  /**
   * @generated from field: optional string main_color = 8;
   */
  mainColor?: string;
};

/**
 * Describes the message types.UserInformations.
 * Use `create(UserInformationsSchema)` to create a new message.
 */
export const UserInformationsSchema: GenMessage<UserInformations> = /*@__PURE__*/
  messageDesc(file_types, 30);

/**
 * @generated from message types.UserChangedInformations
 */
export type UserChangedInformations = Message<"types.UserChangedInformations"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: types.UserInformations user_informations = 2;
   */
  userInformations?: UserInformations;
};

/**
 * Describes the message types.UserChangedInformations.
 * Use `create(UserChangedInformationsSchema)` to create a new message.
 */
export const UserChangedInformationsSchema: GenMessage<UserChangedInformations> = /*@__PURE__*/
  messageDesc(file_types, 31);

/**
 * @generated from message types.BroadcastUserInformations
 */
export type BroadcastUserInformations = Message<"types.BroadcastUserInformations"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string server_id = 2;
   */
  serverId: string;

  /**
   * @generated from field: types.UserInformations user_informations = 3;
   */
  userInformations?: UserInformations;
};

/**
 * Describes the message types.BroadcastUserInformations.
 * Use `create(BroadcastUserInformationsSchema)` to create a new message.
 */
export const BroadcastUserInformationsSchema: GenMessage<BroadcastUserInformations> = /*@__PURE__*/
  messageDesc(file_types, 32);

